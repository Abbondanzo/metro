(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var o=n(1),i=n(10),a=(n(0),n(165)),r={id:"concepts",title:"Concepts"},s={id:"concepts",title:"Concepts",description:"Metro is a JavaScript bundler. It takes in an entry file and various options, and gives you back a single JavaScript file that includes all your code and its dependencies.",source:"@site/../docs/Concepts.md",permalink:"/metro/docs/concepts",editUrl:"https://github.com/facebook/metro/edit/master/website/../docs/Concepts.md",sidebar:"docs",previous:{title:"Getting Started",permalink:"/metro/docs/getting-started"},next:{title:"Bundling",permalink:"/metro/docs/bundling"}},l=[{value:"Resolution",id:"resolution",children:[]},{value:"Transformation",id:"transformation",children:[]},{value:"Serialization",id:"serialization",children:[]},{value:"Modules",id:"modules",children:[]}],d={rightToc:l};function c(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Metro is a JavaScript bundler. It takes in an entry file and various options, and gives you back a single JavaScript file that includes all your code and its dependencies."),Object(a.b)("p",null,"Metro has three separate stages in its bundling process:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Resolution"),Object(a.b)("li",{parentName:"ol"},"Transformation"),Object(a.b)("li",{parentName:"ol"},"Serialization")),Object(a.b)("h3",{id:"resolution"},"Resolution"),Object(a.b)("p",null,"Metro needs to build a graph of all the modules that are required from the entry point. To find which file is required from another file Metro uses a resolver. In reality this stage happens in parallel with the transformation stage."),Object(a.b)("h3",{id:"transformation"},"Transformation"),Object(a.b)("p",null,"All modules go through a transformer. A transformer is responsible for converting (transpiling) a module to a format that is understandable by the target platform (eg. React Native). Transformation of modules happens in parallel based on the amount of cores that you have."),Object(a.b)("h3",{id:"serialization"},"Serialization"),Object(a.b)("p",null,"As soon as all the modules have been transformed they will be serialized. A serializer combines the modules to generate one or multiple bundles. A bundle is literally a bundle of modules combined into a single JavaScript file."),Object(a.b)("h2",{id:"modules"},"Modules"),Object(a.b)("p",null,"Metro has been split out into multiple modules corresponding to every step in the flow, each with their own responsibility. This means that we have a resolver, transformer, and serializer. These modules can be swapped out depending on your needs."))}c.isMDXComponent=!0}}]);