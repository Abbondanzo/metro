(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{65:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return d})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return r})),t.d(n,"default",(function(){return u}));var i=t(1),a=t(6),l=(t(0),t(88)),d={id:"bundling",title:"Bundling"},o={unversionedId:"bundling",id:"bundling",isDocsHomePage:!1,title:"Bundling",description:"When bundling, each of the modules gets assigned a numeric id, meaning no dynamic requires are supported. Requires are changed by its numeric version, and modules are stored in different possible formats. Three different formats of bundling are supported:",source:"@site/../docs/Bundling.md",permalink:"/metro/docs/bundling",editUrl:"https://github.com/facebook/metro/edit/main/docs/../docs/Bundling.md",lastUpdatedAt:1644410936,sidebar:"docs",previous:{title:"Concepts",permalink:"/metro/docs/concepts"},next:{title:"Caching",permalink:"/metro/docs/caching"}},r=[{value:"Plain bundle",id:"plain-bundle",children:[]},{value:"Indexed RAM bundle",id:"indexed-ram-bundle",children:[]},{value:"File RAM bundle",id:"file-ram-bundle",children:[]}],s={rightToc:r};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"When bundling, each of the modules gets assigned a numeric id, meaning no dynamic requires are supported. Requires are changed by its numeric version, and modules are stored in different possible formats. Three different formats of bundling are supported:"),Object(l.b)("h2",{id:"plain-bundle"},"Plain bundle"),Object(l.b)("p",null,"This is the standard bundling format. In this format, all files are wrapped with a function call, then added to the global file. This is useful for environments that expect a JS only bundle (e.g. a browser). Just requiring the entry point with the ",Object(l.b)("inlineCode",{parentName:"p"},".bundle")," extension should trigger a build of it."),Object(l.b)("h2",{id:"indexed-ram-bundle"},"Indexed RAM bundle"),Object(l.b)("p",null,"This format composes the bundle as a binary file, which format has the following parts (all numbers are expressed in Little Endian):"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A magic number: a ",Object(l.b)("inlineCode",{parentName:"li"},"uint32")," must be located at the beginning of the file, with the value ",Object(l.b)("inlineCode",{parentName:"li"},"0xFB0BD1E5"),". This is used to verify the file."),Object(l.b)("li",{parentName:"ul"},"An offset table: the table is a sequence of ",Object(l.b)("inlineCode",{parentName:"li"},"uint32")," pairs, with a header",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"For the header, two ",Object(l.b)("inlineCode",{parentName:"li"},"uint32"),"s can be found: the length of the table, and the length of the startup code."),Object(l.b)("li",{parentName:"ul"},"For the pairs, they represent the offset in the file and the length of code module, in bytes."))),Object(l.b)("li",{parentName:"ul"},"Each of the modules, finished by a null byte (",Object(l.b)("inlineCode",{parentName:"li"},"\\0"),").")),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{}),"` 0                   1                   2                   3                   4                   5                   6\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          Magic number                         |                          Header size                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Startup code size                       |                        Module 0 offset                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Module 0 length                        |                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                               +\n|                                                                                                                               |\n+                                                              ...                                                              +\n|                                                                                                                               |\n+                                                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               |                        Module n offset                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Module n length                        | Module 0 code | Module 0 code |      ...      |       \\0      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| Module 1 code | Module 1 code |      ...      |       \\0      |                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                                               +\n|                                                                                                                               |\n+                                                              ...                                                              +\n|                                                                                                                               |\n+                                                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                                                               | Module n code | Module n code |      ...      |       \\0      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+`\n")),Object(l.b)("p",null,"This structure is optimal for an environment that is able to load all code in memory at once:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"By using the offset table, one can load any module in constant time, where the code for module ",Object(l.b)("inlineCode",{parentName:"li"},"x")," is located at ",Object(l.b)("inlineCode",{parentName:"li"},"file[(x + 3) * sizeof(uint32)]"),". Since there is a null character (",Object(l.b)("inlineCode",{parentName:"li"},"\\0"),") separating all modules, usually length does not even need to be used, and the module can be loaded directly as an ASCIIZ string."),Object(l.b)("li",{parentName:"ul"},"Startup code is always found at ",Object(l.b)("inlineCode",{parentName:"li"},"file[sizeof(uint32)]"),".")),Object(l.b)("p",null,"This bundling is usually used by iOS."),Object(l.b)("h2",{id:"file-ram-bundle"},"File RAM bundle"),Object(l.b)("p",null,"Each module is stored as a file, with the name ",Object(l.b)("inlineCode",{parentName:"p"},"js-modules/${id}.js"),", plus an extra file called ",Object(l.b)("inlineCode",{parentName:"p"},"UNBUNDLE")," is created, which its only content is the magic number, ",Object(l.b)("inlineCode",{parentName:"p"},"0xFB0BD1E5"),". Note that the ",Object(l.b)("inlineCode",{parentName:"p"},"UNBUNDLE")," file is created at the root.\nThis bundling is usually used by Android, since package contents are zipped, and access to a zipped file is much faster. If the indexed format was used instead, all the bundled should be unzipped at once to get the code for the corresponding module."))}u.isMDXComponent=!0}}]);